#!/usr/bin/env node

'use strict';

var SerialPort = require('serialport').SerialPort,
    optimist = require('optimist'),
    comm = require('../lib/comm.js'),
    disco = require('../lib/disco_controller.js'),
    programCtrl = require('../lib/program_controller.js');

// Process Arguments
var args = optimist
  .alias('h', 'help')
  .alias('h', '?')
  .options('serialPort', {
    alias: 's',
    describe: 'Name of serial port. See serialPortList.js for open serial ports.'
  })
  .options('program', {
    alias: 'p',
    describe: 'Name of the program to run.'
  })
  .options('list', {
    alias: 'l',
    describe: 'List the available programs'
  })
  .argv;

if (args.help) {
  optimist.showHelp();
  return process.exit(-1);
}

// List programs
if (args.list) {
  process.stdout.write('\nPrograms:\n');
  programCtrl.getProgramList()
  .then(function(programs){
    programs.forEach(function(program){
      var name = program.file.replace(/\.js$/, '');
      process.stdout.write(' * '+ name +' -- '+ program.info.description +'\n');
    });
    process.stdout.write('\n');
    process.exit(-1);
  });
  return;
}

// No serial port, nothing else to do
if (!args.serialPort) {
  console.error('Serial port name is required.');
  return process.exit(-1);
}

// Exit program when user enters CNTRL + C
process.stdin.resume();
process.stdin.setRawMode(true);
process.stdin.on('data', function (s) {
  if (s[0] === 0x03) {
    try {
      port.close();
    } catch(e) {
      process.stderr.write('Error closing the port: ');
      process.stderr.write(e.message);
    }
    process.exit(0);
  }
});

// Start floor
var port;
disco.controller.emulatedFloor = false;
disco.controller.setDimensions(0, 0);
port = comm.start(args.serialPort);
port.on('error', function (err) {
  console.log(err);
});

// Handle Comm events
comm.on('done-addressing', function(found) {
  console.log('Done addressing. Found '+ found +' floor cells');
  if (args.program) {
    programCtrl.runProgram(args.program);
  }
});

comm.on('fade-complete', function(addr) {
  console.log('Fade complete for ', addr);
});
